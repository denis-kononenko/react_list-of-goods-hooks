{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortBy","setSortBy","isReverse","setIsReverse","prepearedGoods","goods","inputGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","prepearGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,uBAAAA,I,oBAAAA,M,KAKL,IA6BaE,EAAgB,WAC3B,MAA4BC,mBAA0B,MAAtD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAjCa,SACnBC,EACAL,EACAE,GAEA,IAAMI,EAAU,YAAOD,GAqBvB,OAnBe,OAAXL,GACFM,EAAWC,MAAK,SAACC,EAAOC,GACtB,OAAQT,GACN,KAAKJ,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAWQ,UAGNR,EAOgBS,CAAalB,EAAiBG,EAAQE,GAO7D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYlB,IAAWJ,EAASc,WAElCS,QAAS,kBAAMlB,EAAUL,EAASc,WALpC,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYlB,IAAWJ,EAASgB,SAElCO,QAAS,kBAAMlB,EAAUL,EAASgB,SALpC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAahB,IAEfiB,QAAS,kBAAMhB,GAAcD,IAL/B,sBAUa,OAAXF,GAAmBE,IACnB,wBACEe,KAAK,SACLD,UAAU,4BACVG,QA1CI,WACZlB,EAAU,MACVE,GAAa,IAqCP,sBAUJ,6BACE,6BACGC,EAAegB,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC3GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1d5a3c21.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET,\n  LENGTH,\n}\n\nconst prepearGoods = (\n  goods: string[],\n  sortBy: SortType | null,\n  isReverse: boolean,\n): string[] => {\n  const inputGoods = [...goods];\n\n  if (sortBy !== null) {\n    inputGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    inputGoods.reverse();\n  }\n\n  return inputGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<SortType | null>(null);\n  const [isReverse, setIsReverse] = useState(false);\n\n  const prepearedGoods = prepearGoods(goodsFromServer, sortBy, isReverse);\n\n  const reset = () => {\n    setSortBy(null);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortBy !== SortType.ALPHABET,\n          })}\n          onClick={() => setSortBy(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortBy !== SortType.LENGTH,\n          })}\n          onClick={() => setSortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReverse,\n          })}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy !== null || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {prepearedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}